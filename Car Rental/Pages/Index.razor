@page "/"
@using Car_Rental.Common.Enums
@using Car_Rental.Common.Classes
@using Car_Rental.Business.Classes
@using Car_Rental.Common.Extensions
@inject BookingProcessor bp
@inject InputValues iv


<PageTitle>Your no.1 car rental partner.</PageTitle>
<h2>Car Rental Assignment</h2>

@* Alert label *@
<div>
    @if (bp.Error != null)
    {
        <div class="alert alert-warning align-top;" style="width:400px; height:75px" role="alert">
                <ul>
                    <li>@bp.Error</li>                
                </ul>
        </div>
    }
</div>

@* Vehicles *@
<h5>Vehicles</h5>
<div class="col-md-10 form-select-sm">
    <table class="table border border-1 border-black table-hover table-borderless align-bottom">
        <thead>
            <tr class="bg-black table-active">
                <th scope="col" class="bg-black text-white">Reg.Nr</th>
                <th scope="col" class="bg-black text-white">Brand</th>
                <th scope="col" class="bg-black text-white">Odometer</th>
                <th scope="col" class="bg-black text-white">Cost/Km</th>
                <th scope="col" class="bg-black text-white">Type</th>
                <th scope="col" class="bg-black text-white">$ day</th>
                <th scope="col" class="bg-black text-white">Action</th>
                <th scope="col" class="bg-black text-white">Status</th>
            </tr>
        </thead>

            <tbody>
                <tr>
                    <td><input disabled="@bp.WaitAsync" class="form-text" @bind="iv.Vehicle.RegNumber"></td>
                    <td>
                    <select disabled="@bp.WaitAsync" class="align-bottom" @bind="iv.Vehicle.Brands">
                    @foreach (var brand in Enum.GetNames(typeof(VehicleBrands)))
                    {
                            <option value="@Enum.Parse(typeof(VehicleBrands), @brand)">@brand</option> 
                        }
                    }
                    </select>
                    </td>
                    <td><input disabled="@bp.WaitAsync" class="form-text" @bind="iv.Vehicle.Odometer"></td>
                        <td><input disabled="@bp.WaitAsync" class="form-text" @bind="iv.Vehicle.CostKm"></td>
                    <td>
                        <select disabled="@bp.WaitAsync" class="align-bottom" @bind="iv.Vehicle.Type">
                            @foreach (var type in Enum.GetNames(typeof(VehicleTypes)))
                            {
                                <option value="@Enum.Parse(typeof(VehicleTypes), @type)">@type</option>
                            }
                        </select>
                    </td>
                    <td><input disabled="@bp.WaitAsync" class="form-text" style="width:50px" @bind="iv.Vehicle.CostDay"></td>
                    <td>
                        <button disabled="@bp.WaitAsync" class="btn btn-sm btn-outline-success" style="height:25px" @onclick="() => {bp.AddVehicle(iv.Vehicle); iv.ClearVehicle();}">Add</button>
                    </td>
                    <td>
                        @if (bp.WaitAsync == true)
                        {
                            <badge class="badge bg-warning">Processing</badge>
                        }

                    </td>
                </tr>

                    @foreach (var vehicle in bp.GetVehicles())
                    {
                    <tr>
                        <td scope="row" class="fw-bold">@vehicle.RegNumber</td>
                        <td>@vehicle.Brands</td>
                        <td>@vehicle.Odometer</td>
                        <td>@vehicle.CostKm</td>
                        <td>@vehicle.Type</td>
                        <td>@vehicle.CostDay</td>
                        <td><span class="align-content-center">
                            
                                @if (vehicle.Status != VehicleStatus.Booked)
                                {

                                    <select disabled="@bp.WaitAsync" style="height:25px" @bind="iv.Person.Id">
                                        @foreach (var person in bp.GetPersons())
                                        {
                                            <option value="@person.Id">@person.FirstName @person.LastName (@person.SSN)</option>
                                        }
                            </select>


                                    <button disabled="@bp.WaitAsync" class="btn btn-sm btn-outline-info" style="height:25px" @onclick="async () => {await bp.RentVehicle(vehicle.Id, iv.Person.Id); iv.Person.Id = default;}">Rent</button>
                                }
                                else
                                {

                                    <input disabled="@bp.WaitAsync" class="form-text" style="width:144px" @bind="bp.Distance">
                            <button disabled="@bp.WaitAsync" class="btn btn-sm btn-outline-danger" style="height:25px; margin-right: 55px" @onclick="async () => await bp.ReturnVehicle(vehicle.Id, bp.Distance)">Return</button>

                                }
                    
                            </span>
                        </td>
                    <td>
                            <badge class="badge text-bg-@(vehicle.Status == VehicleStatus.Booked ? "danger" : "dark")">@vehicle.Status</badge>
                        </td>
                    </tr>
                }
            </tbody>
    </table>
</div>

@* Bookings *@
<h5>Bookings</h5>
<div class="row">
    <div class="col-md-6 form-select-sm">
        <table class="table border border-1 border-black table-hover table-sm table-borderless align-baseline">
            <thead>
                <tr>
                    <th scope="col" class="bg-black text-white-50">RegNo</th>
                    <th scope="col" class="bg-black text-white-50">Customer</th>
                    <th scope="col" class="bg-black text-white-50">Km rented</th>
                    <th scope="col" class="bg-black text-white-50">Km returned</th>
                    <th scope="col" class="bg-black text-white-50">Rented</th>
                    <th scope="col" class="bg-black text-white-50">Returned</th>
                    <th scope="col" class="bg-black text-white-50">Cost</th>
                    <th scope="col" class="bg-black text-white-50">Status</th>
                </tr>
            </thead>

            <tbody>
                @foreach(var booking in bp.GetBookings())
                {
                    <tr>
                        <td scope="row" class="fw-bold">@booking.Vehicle.RegNumber</td>
                        <td>@booking.Customer.LastName @booking.Customer.FirstName (@booking.Customer.SSN)</td>
                        <td>@booking.KmRent</td>
                        <td>@booking.KmReturn</td>
                        <td>@booking.DateRented.ToShortDateString()</td>
                        <td>@booking.DateReturned.ToShortDateString()</td>
                        <td>@booking.RentCost</td>
                        <td class="badge text-bg-@(booking.Status == VehicleStatus.Booked ? "danger" : booking.Status == VehicleStatus.Available ? "success" : "dark")">@(booking.Status == VehicleStatus.Booked ? "Booked" : "Closed")
                        </td>
                    </tr>
                } 
            </tbody>
        </table>
     </div>
</div> 

@* Customers *@
<h5>Customers</h5>
<div class="row">
    <div class="col-md-3 form-select-sm">
        <table class="table border border-1 border-black table-hover table-sm">
            <thead>
                <tr>
                    <th scope="col" class="bg-black text-white-50">SSN</th>
                    <th scope="col" class="bg-black text-white-50">Last Name</th>
                    <th scope="col" class="bg-black text-white-50" style="width:100px">First Name</th>
                    <th scope="col" class="bg-black"></th>
                </tr>
                </thead>

                <tbody>
                <tr>
                    <td><input style="width: 75px" class="form-text" name="SSN" @bind="iv.Person.SSN"></td>
                    <td><input style="width: 120px" class="form-text" name="FirstName" @bind="iv.Person.LastName"></td>
                    <td><input style="width: 120px" class="form-text" name="LastName" @bind="iv.Person.FirstName"></td>
                    <td><button class="btn btn-sm btn-outline-success" name="AddPerson" style="height: 25px; width:40px" @onclick="() => {bp.AddPerson(iv.Person); iv.ClearPerson();}">Add</button></td>
                </tr>
                    @foreach(var person in bp.GetPersons())
                    {
                        <tr>
                        <td scope="row" class="fw-bold form-select-sm">@person.SSN</td>
                        <td class="form-select-sm">@person.LastName</td>
                        <td class="form-select-sm">@person.FirstName</td>
                        </tr>
                    }
            </tbody>
        </table> 
    </div>
</div>